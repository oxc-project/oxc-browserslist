name: CI

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '**/*.md'
      - '!.github/workflows/ci.yml'
  push:
    branches:
      - main
      - "renovate/**"
    paths-ignore:
      - '**/*.md'
      - '!.github/workflows/ci.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

defaults:
  run:
    shell: bash

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        include:
          # - os: windows-latest
          - os: ubuntu-latest
          - os: macos-14
    runs-on: ${{ matrix.os }}
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: Boshen/setup-rust@main
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          components: rustfmt # for `cargo codegen`
      - uses: pnpm/action-setup@v4.0.0
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - run: pnpm install
      - run: cargo check --all-targets --all-features
      - run: cargo test

  lint:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: Boshen/setup-rust@main
        with:
          components: clippy
      - run: cargo clippy --all-targets --all-features -- -D warnings

  doc:
    name: Doc
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: Boshen/setup-rust@main
        with:
          components: rust-docs
      - run: RUSTDOCFLAGS='-D warnings' cargo doc --no-deps --document-private-items

  wasm:
    name: Wasm
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: Boshen/setup-rust@main
        with:
          cache-key: wasm
          save-cache: ${{ github.ref_name == 'main' }}
      - name: Check
        run: |
          rustup target add wasm32-unknown-unknown
          cargo check --target wasm32-unknown-unknown --features wasm_bindgen

  typos:
    name: Spell Check
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: crate-ci/typos@master
        with:
          files: .
